#include "version.h"
#include "timer.h"
#include "pins.h"
#include "protocol.h"
#include "st7735.h"
#include <stdio.h> 
#include <string.h>
#include "flash.h"
#include "usart.h"
#include "protocol.h"

#define size_dma_buf 100
unsigned char dma_buf_rec[size_dma_buf];
unsigned char dma_buf_send[size_dma_buf];

unsigned int dma_cnt=0;
unsigned int dma_state=0;
unsigned char command_len[3];
unsigned char command[3];
unsigned char checksum[8];

unsigned int NextByte (void);

enum
{
	STATUS=0,
	VERSION,
	SUM_REPORT,
	CLEAR_REPORT,
	ALLOW_NOTE,
	CLUTZ_LED,
	COUNTER_NOTE,
	RESET_POWER,
	CURRENCY
};



void StartReceiveCommand (void)
{
	HAL_UART_DMAStop(&huart1);
	HAL_UART_Receive_DMA(&huart1, dma_buf_rec, size_dma_buf);
}

void ReceiveCommand (void)
{
	char tmpBuf[50];
	
//	ClearLcdMemory();	
	LCD_ShowString(10,50,dma_buf_rec);
	sprintf(tmpBuf,"CNT %d",hdma_usart1_rx.Instance->NDTR);
//	LCD_ShowString(10,70,tmpBuf);

//	LCD_Refresh();
	//HAL_UART_Receive_DMA(&huart1, dma_buf_rec, size_dma_buf);
}


unsigned int CheckDMABuf (void)
{
	unsigned int dma_len=0,count=0;
	char tmpBuf[50];

	count=(hdma_usart1_rx.Instance->NDTR);
	dma_len= size_dma_buf - count;
	

	ClearLcdMemory();	
	sprintf(tmpBuf,"CNT %d %d %d",count,dma_cnt,dma_len);
	LCD_ShowString(10,70,tmpBuf);
	LCD_Refresh();	
			

	
	
	while(dma_cnt<dma_len){
	

			
	NextByte();
	
	}
	
}


unsigned int NextByte (void)
{
	unsigned int tmp=0;
	unsigned int len=0;
	
	tmp=dma_buf_rec[dma_cnt++];
	
	if((tmp<0x20)&&(tmp>0x7F)){ 
		if(tmp==0x02){dma_state=1;}
		return 0;
	}
	
	if(dma_state==0){return 0;}
	
	dma_state++;
	
	if((dma_state>=1)&&(dma_state<=3)){command_len[dma_state-1]=tmp;return 0;}

	if((dma_state>=4)&&(dma_state<=6)){command[dma_state-4]=tmp;return 0;}
	
	len=(command_len[0]-0x30)*100+(command_len[1]-0x30)*10+(command_len[2]-0x30);
		LED_GREEN(1);	
	if(dma_state<len){return 0;}

	checksum[dma_state-len]=tmp;
	
	if(dma_state<len+8){return 0;}
		

	//	ClearLcdMemory();	
	//	LCD_ShowString(10,50,dma_buf_rec);
	//	LCD_Refresh();
	
}





void SendCommand (unsigned int session,unsigned int command)
{
	dma_buf_send[0]=0x03;
}
